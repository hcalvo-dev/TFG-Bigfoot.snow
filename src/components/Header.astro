---
const navItems = [
  { label: 'INICIO', path: '/' },
  { label: 'EQUIPOS', path: 'equipos' },
  { label: 'CLASES', path: 'clases' },
  { label: 'MONTAÃ‘AS', path: 'montanas' },
  { label: 'CONTACTO', path: 'contacto' },
];
import MenuClient from './dropdown.tsx';
import { ShoppingCart } from '@lucide/astro';
import SearchDropdown from './search/Search_Dropdown.tsx';
import {
  AccountLinkWrapper,
  AccountLinkWrapper_lateral,
} from '../components/Auth/AccountLinkWrapper';
import { checkSession } from '../../utils/checkSession';

const session = checkSession(Astro.request);
const currentPath = Astro.url.pathname;

---

<style>
  body.menu-open {
    overflow: hidden;
  }
</style>

<header
  id="main-header"
  class="transition-all duration-500 ease-in-out w-full px-4 py-2 flex justify-between items-center text-black z-50 fixed top-0 bg-gray-200/25">
  <!-- Logo + Nav -->
  <div class="flex items-center space-x-6">
    <!-- Logo -->
    <a href="/" class="flex items-center space-x-2">
      <img src="/img/logo_1.svg" alt="Logo" class="w-12 h-12 m-0 pr-0.5" />
      <h1 class="text-4xl text-black font-bold font-blowbrush tracking-widest">BIGFOOT</h1>
    </a>

    <nav class="flex">
      <!-- Desktop Menu -->
      <ul class="hidden xl:flex space-x-4 ml-10 mr-5 pl-10">
        {
          navItems.map(({ label, path }) => {
            return (
              <li>
                <a
                  href={path}
                  class={`font-bold text-standard font-blowbrush tracking-widest transition-colors duration-300 ${
                    currentPath === `/${path}` || (path === '/' && currentPath === '/')
                      ? 'squiggly-underline text-blue-600'
                      : 'hover:text-blue-500'
                  }`}>
                  {label}
                </a>
              </li>
            );
          })
        }
      </ul>

      <!-- Overlay -->
      <div
        id="overlay"
        class="fixed inset-0 bg-black/60 transition-opacity duration-500 z-40 hidden opacity-0">
      </div>

      <!-- Side Menu -->
      <div
        id="side-menu"
        class="fixed top-0 right-0 h-full w-1/2 lg:w-1/3 bg-gray-600 shadow-xl z-50 transform translate-x-full transition-transform duration-500 ease-in-out">
        <div class="flex justify-end p-4">
          <button id="menu-close" class="text-black flex top-1 absolute text-5xl cursor-pointer"
            >&times;</button
          >
        </div>
        <ul class="flex flex-col pt-12 px-6 pb-6">
          {
            navItems.map(({ label, path }) => {
              return (
                <li>
                  <a
                    href={path}
                    class={`text-white text-xl pt-4 hover:text-blue-600 text-standard font-blowbrush tracking-widest transition-colors duration-300 ${
                      currentPath === `/${path}` || (path === '/' && currentPath === '/')
                        ? 'squiggly-underline text-blue-600'
                        : 'hover:text-blue-500'
                    }`}>
                    {label}
                  </a>
                </li>
              );
            })
          }
        </ul>
        <hr class="my-4 border-gray-600" />
        <div class="flex flex-col items-start space-y-4 mt-4 px-6">
          <!-- Search -->
          <div class="relative w-full">
            <SearchDropdown client:only="react" />
          </div>

          <!-- Carrito -->
          <a
            href="/carrito"
            class="flex justify-center items-center space-x-2 text-standard font-blowbrush tracking-widest text-white">
            <ShoppingCart class="w-6 h-6" />
            <span class="pt-1 pl-0.75 hover:text-blue-600 transition-colors">CARRITO</span>
          </a>

          <!-- Login -->
          <AccountLinkWrapper_lateral client:only="react" session={JSON.stringify(session)} />
        </div>
      </div>
    </nav>
  </div>

  <!-- Right section -->
  <div class="hidden xl:flex items-center space-x-6">
    <!-- Search -->
    <div class="relative hidden xl:block">
      <SearchDropdown client:only="react" />
    </div>

    <!-- Iconos de cesta y cuenta -->
    <div class="flex items-center mr-2 space-x-6">
      <!-- Carrito -->
      <a href="/carrito" class="flex flex-col mr-3 items-center text-black hover:text-blue-600 transition">
        <ShoppingCart class="w-6 h-6 mt-1 mb-1" />
        <span
          class="text-xs font-semibold font-blowbrush hover:text-blue-600 transition tracking-widest">
          CESTA
        </span>
      </a>

      <!-- Mi Cuenta -->
      <AccountLinkWrapper client:only="react" session={JSON.stringify(session)} />
    </div>
  </div>

  <!-- Mobile Hamburger -->
  <button id="menu-toggle" class="xl:hidden z-50 cursor-pointer">
    <svg class="w-8 h-8 text-black" fill="none" stroke="currentColor" viewBox="0 0 24 24">
      <path
        stroke-linecap="round"
        stroke-linejoin="round"
        stroke-width="2"
        d="M4 6h16M4 12h16M4 18h16"></path>
    </svg>
  </button>
</header>

<!-- Script para manejar el menu lateral -->
<MenuClient client:load />

<!-- Script para manejar scroll -->
<script>
  window.addEventListener('DOMContentLoaded', () => {
    const header = document.getElementById('main-header');

    window.addEventListener('scroll', () => {
      if (!header) return;

      if (window.scrollY > 10) {
        header.classList.add('bg-gray-300/100');
        header.classList.remove('bg-gray-300/25');
      } else {
        header.classList.remove('bg-gray-300/100');
        header.classList.add('bg-gray-300/25');
      }
    });
  });
</script>
